name: Deploy to GitHub Pages

on:
  push:
    tags: # 태그가 푸시될 때만 실행
      - "v*.*.*"

permissions:
  contents: write # 레포지토리 콘텐츠에 대한 쓰기 권한
  actions: read # 액션에 대한 읽기 권한
  pull-requests: write

jobs:
  deploy-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout gh-pages branch
        run: |
          git fetch --all
          git checkout gh-pages || git checkout --orphan gh-pages  # 'gh-pages' 브랜치가 없다면 새로 만듦
          git reset --hard

      - name: Get latest run ID # Gradle Build 워크플로우의 ID를 가져옴
        id: get_run_id
        run: |
          run_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=success" \
            | jq '.workflow_runs | map(select(.name == "Vite Build")) | .[0].id')
            # 다른 워크플로우의 ID를 가져오기 위해 GitHub API를 사용
          echo "$run_id"
          echo "run_id=$run_id" >> $GITHUB_ENV # 환경 변수에 저장

      - name: Download artifact from previous workflow
        uses: actions/download-artifact@v4 # 이전 워크플로우에서 아티팩트를 다운로드하는 액션
        with:
          name: build-artifact
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ env.run_id }} # 이전 워크플로우의 ID

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3 # GitHub Pages에 배포하는 액션
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: . # 배포할 디렉토리
